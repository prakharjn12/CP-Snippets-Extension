<snippet>
  <content><![CDATA[
struct rantree{
  ll n;
  vpll Edges;
  vll weights;
  void build(ll nn)
  {
    n=nn;

    DSU dsu;
    dsu.init(n);

    
    rep(i,1,n-1) {
        ll x = ran(1,n);
        ll y = ran(1,n);

        while (dsu.get(x)==dsu.get(y)) {
            x = ran(1,n);
            y = ran(1,n);
        }
        dsu.merge(x, y);
        Edges.push_back({x,y});
        ll w=ran(1,1000000000);
        weights.push_back(w);
    }
  }

    void show()
    {
    rep(i,0,sz(Edges)-1)
    {
      cout<<Edges[i].f<<' '<<Edges[i].s<<' '
        << weights[i] <<endl;
    }
  }
};
// rantree t;
// t.build(n);
// t.show();
]]></content>
  <tabTrigger>rantree</tabTrigger>
  <description>randome tree using dsu (slow) </description>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <!-- <scope >source.python</scope > -->
</snippet>