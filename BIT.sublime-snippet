<snippet>
  <content><![CDATA[
struct BIT
{
     vll bit;
     ll n;
     void init(ll nn)
     {
        n=nn;
        bit.assign(n+1,0);
     }
     void build(ll a[])
     {
        rep(i,1,n) update(i,a[i]);
     }
     ll sum(ll r)
     {
        ll ans = 0;
        for (; r >= 0; r = (r & (r + 1)) - 1)
            ans += bit[r];
        return ans;
     }
     ll query(ll l,ll r)
     {
        return sum(r)-sum(l-1);
     }
     void update(ll idx, ll val) {
        for (; idx <=n; idx = idx | (idx + 1))
            bit[idx] += val;
    }
};
  // BIT bit;
  // bit.init(n);
  // bit.build(a);
  // bit.update(pos,val);
  // bit.query(l,r);
]]></content>
  <tabTrigger>BIT</tabTrigger>
  <description>binary index tree(fenwick tree)</description>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <!-- <scope >source.python</scope > -->
</snippet>