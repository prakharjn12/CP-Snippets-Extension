<snippet>
  <content><![CDATA[
struct LRU {  
    unordered_map<ll, pair<list<ll>::iterator,ll>> mIter;
    list<ll>l;
    ll n;
  
    void init(ll cap) {
        n=cap;
    }
    void show() 
       {
         for(auto it:l) 
         cout<<it<<' '<<mIter[it].s<<endl;
       }
    ll get(ll key) 
    { 
      if(mIter.count(key)==0) return -1;  // not present in cache
      ll val=mIter[key].s;
      l.erase(mIter[key].f);
      l.push_back(key);
      mIter[key].f= --l.end();
      return val;
    }
    
    void put(ll key, ll val) {
        
      if(get(key)!=-1) // already present and moved at front
      {
        mIter[key].s=val;
        return;
      }
      if(mIter.size()==n)
      {
        ll ff=l.front();
        mIter.erase(ff);
        l.pop_front();
      }
      
      l.push_back(key);
      mIter[key]= {--l.end(),val};
      
    }
};

// LRU lru
// lru.init(n);
// lru.get(key);
// lru.put(key,val);
]]></content>
  <tabTrigger>LRU</tabTrigger>
  <description>least recently used</description>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <!-- <scope >source.python</scope > -->
</snippet>